{"version":3,"sources":["app.js","scripts.js","debugger/debugger.js","components/countable/CountableDirective.js","components/helper/HelpSystemDirective.js","debugger/factory/StateSummary.js","debugger/factory/TagSummary.js","debugger/factory/Wrapper.js","debugger/service/DataLayerLimitedStack.js","debugger/service/DataLayerReport.js","debugger/service/Debugger.js","debugger/service/MinimizedMemento.js","debugger/service/Report.js","debugger/service/container.prod.js","debugger/service/container.test.js","pages/events-log/details/EventsLogDetailsController.js","pages/overview/tag-details/OverviewTagDetailsController.js","pages/events-log/list/EventsLogController.js","pages/overview/tags/OverviewTagsController.js","pages/events-log/details/related-tags/details/EventsLogTagDetailsController.js"],"names":["_classCallCheck","instance","Constructor","TypeError","angular","module","run","$rootScope","$debugger","$state","$window","MOBILE_PHONE_MAX_WIDTH","MOBILE_DEVICE_MAX_WIDTH","MOBILE_DEVICE_MAX_HEIGHT","PIVOT_ORIENTATION","isMobile","parent","screen","availWidth","orientation","isHelperVisible","innerWidth","innerHeight","addEventListener","$digest","config","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","MODULE_NAME","TEMPLATE_MODULE_NAME","constant","undefined","window","stgEnv","countableDirective","$timeout","restrict","replace","scope","model","countClass","delay","link","element","initial","$watch","value","addClass","removeClass","$inject","directive","helpSystemDirective","content","placement","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","StateSummary","this","tagSummaryCollection","dataLayerElement","variableCollection","id","tagSummary","TagSummary","$name","$code","$fired","$respectVisitorsPrivacy","$disableInDebugMode","$triggers","$dataLayerStates","dataLayerState","push","index","resolvedTriggerIds","resolved","indexOf","triggerId","resolveConditionsIndexes","conditions","doNotTrackEnabled","respectVisitorsPrivacy","firedCount","disableInDebugMode","get","set","name","code","results","triggers","div","Wrapper","$id","document","getElementById","navbar","style","background","width","height","position","zIndex","right","top","setTimeout","body","factory","wrapperFactory","STACK_LIMIT","DataLayerLimitedStack","$limit","setLimit","$stack","isLimitDefined","isLimitExceeded","shift","service","DataLayerReport","summary","tags","tag","firedTriggers","Debugger","$container","$minimizedMemento","debugOptions","containerName","$containerName","$tagTree","copy","tagTree","minimizedMemento","close","stack","listener","_this","addListener","MinimizedMemento","$wrapper","$cookies","setMinimized","minimized","stgDebuggerMinimized","isMinimized","maximize","minimize","Report","$StateSummary","$TagSummary","$dataLayerLimitedStack","$filter","$this","stateSummary","getTagTree","addTagSummary","updateSummary","addListenerContainerStates","states","getDataLayerStates","resolvedTriggersIds","trigger","getTagSummary","increaseFiredCount","markResolvedTriggers","getTagSummaryCollection","sevenTag","EventsLogDetailsController","$stateParams","dataLayerLimitedStack","stateParams","eventId","equals","OverviewTagDetailsController","$report","report","$doNotTrack","isEnabled","EventsLogController","OverviewTagsController","EventsLogTagDetailsController","$scope","view"],"mappings":"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","file":"scripts.js","sourcesContent":["/**\n * Copyright (C) 2015 Digimedia Sp. z.o.o. d/b/a Clearcode\n *\n * This program is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, either version 3 of the License, or (at your option) any\n * later version.\n *\n * This program is distrubuted in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n'use strict';\n\nangular\n    .module('application', [\n        'ngCookies',\n        'stg.debugger',\n        'stg.debugger.templates',\n        'ui.bootstrap',\n        'ui.router',\n        'ngAnimate'\n    ])\n    .run([\n\n        '$rootScope',\n        'stg.debugger.debugger',\n        '$state',\n        '$window',\n\n        ($rootScope, $debugger, $state, $window) => {\n\n            const MOBILE_PHONE_MAX_WIDTH = 400,\n                  MOBILE_DEVICE_MAX_WIDTH = 800,\n                  MOBILE_DEVICE_MAX_HEIGHT = 600,\n                  PIVOT_ORIENTATION = 0;\n\n            $rootScope.debugger = $debugger;\n            $rootScope.$state = $state;\n\n            $rootScope.isMobile = () => {\n\n                return $window.parent.screen.availWidth < MOBILE_PHONE_MAX_WIDTH && $window.orientation === PIVOT_ORIENTATION;\n\n            };\n\n            // Hotfix: we need more flexible mobile detection, so we will turn off helper for mobile\n            $rootScope.isHelperVisible = () => {\n\n                // This is case for all mobile devices with touch\n                return !($window.parent.innerWidth <= MOBILE_DEVICE_MAX_WIDTH && $window.parent.innerHeight <= MOBILE_DEVICE_MAX_HEIGHT);\n\n            };\n\n            $window.addEventListener('orientationchange', function() {\n\n                $rootScope.$digest();\n\n            }, false);\n\n        }\n    ])\n    .config([\n\n        '$stateProvider',\n        '$urlRouterProvider',\n\n        ($stateProvider, $urlRouterProvider) => {\n\n            $stateProvider\n                .state('overview', {\n                    url: '/overview',\n                    templateUrl: 'pages/overview/overview.html'\n                })\n                    .state('overview.tags', {\n                        url: '/tags',\n                        templateUrl: 'pages/overview/tags/tags.html',\n                        controller: 'stg.debugger.OverviewTagsController as view'\n                    })\n                    .state('overview.tag-details', {\n                        url: '/tags/{id}',\n                        controller: 'stg.debugger.OverviewTagDetailsController as view',\n                        templateUrl: 'pages/overview/tag-details/tag-details.html'\n                    })\n                .state('events-log', {\n                    url: '/events-log',\n                    templateUrl: 'pages/events-log/events-log.html'\n                })\n                    .state('events-log.list', {\n                        url: '/list',\n                        controller: 'stg.debugger.EventsLogController as view',\n                        templateUrl: 'pages/events-log/list/list.html'\n                    })\n                    .state('events-log.details', {\n                        url: '/{eventId}',\n                        controller: 'stg.debugger.EventsLogDetailsController as view',\n                        templateUrl: 'pages/events-log/details/details.html'\n                    })\n                        .state('events-log.details.variables', {\n                            url: '/variables',\n                            templateUrl: 'pages/events-log/details/variables/variables.html'\n                        })\n                        .state('events-log.details.data-layer', {\n                            url: '/data-layer',\n                            templateUrl: 'pages/events-log/details/data-layer/data-layer.html'\n                        })\n                        .state('events-log.details.related-tags', {\n                            url: '/related-tags',\n                            templateUrl: 'pages/events-log/details/related-tags/related-tags.html'\n                        })\n                            .state('events-log.details.related-tags.list', {\n                                url: '/list',\n                                templateUrl: 'pages/events-log/details/related-tags/list/list.html'\n                            })\n                            .state('events-log.details.related-tags.details', {\n                                url: '/{id}',\n                                templateUrl: 'pages/events-log/details/related-tags/details/details.html',\n                                controller: 'stg.debugger.EventsLogTagDetailsController as details'\n                            });\n\n            $urlRouterProvider\n                .otherwise('/overview/tags');\n\n        }\n]);\n","/**\n * Copyright (C) 2015 Digimedia Sp. z.o.o. d/b/a Clearcode\n *\n * This program is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, either version 3 of the License, or (at your option) any\n * later version.\n *\n * This program is distrubuted in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n'use strict';\n\nangular.module('application', ['ngCookies', 'stg.debugger', 'stg.debugger.templates', 'ui.bootstrap', 'ui.router', 'ngAnimate']).run(['$rootScope', 'stg.debugger.debugger', '$state', '$window', function ($rootScope, $debugger, $state, $window) {\n\n    var MOBILE_PHONE_MAX_WIDTH = 400,\n        MOBILE_DEVICE_MAX_WIDTH = 800,\n        MOBILE_DEVICE_MAX_HEIGHT = 600,\n        PIVOT_ORIENTATION = 0;\n\n    $rootScope['debugger'] = $debugger;\n    $rootScope.$state = $state;\n\n    $rootScope.isMobile = function () {\n\n        return $window.parent.screen.availWidth < MOBILE_PHONE_MAX_WIDTH && $window.orientation === PIVOT_ORIENTATION;\n    };\n\n    // Hotfix: we need more flexible mobile detection, so we will turn off helper for mobile\n    $rootScope.isHelperVisible = function () {\n\n        // This is case for all mobile devices with touch\n        return !($window.parent.innerWidth <= MOBILE_DEVICE_MAX_WIDTH && $window.parent.innerHeight <= MOBILE_DEVICE_MAX_HEIGHT);\n    };\n\n    $window.addEventListener('orientationchange', function () {\n\n        $rootScope.$digest();\n    }, false);\n}]).config(['$stateProvider', '$urlRouterProvider', function ($stateProvider, $urlRouterProvider) {\n\n    $stateProvider.state('overview', {\n        url: '/overview',\n        templateUrl: 'pages/overview/overview.html'\n    }).state('overview.tags', {\n        url: '/tags',\n        templateUrl: 'pages/overview/tags/tags.html',\n        controller: 'stg.debugger.OverviewTagsController as view'\n    }).state('overview.tag-details', {\n        url: '/tags/{id}',\n        controller: 'stg.debugger.OverviewTagDetailsController as view',\n        templateUrl: 'pages/overview/tag-details/tag-details.html'\n    }).state('events-log', {\n        url: '/events-log',\n        templateUrl: 'pages/events-log/events-log.html'\n    }).state('events-log.list', {\n        url: '/list',\n        controller: 'stg.debugger.EventsLogController as view',\n        templateUrl: 'pages/events-log/list/list.html'\n    }).state('events-log.details', {\n        url: '/{eventId}',\n        controller: 'stg.debugger.EventsLogDetailsController as view',\n        templateUrl: 'pages/events-log/details/details.html'\n    }).state('events-log.details.variables', {\n        url: '/variables',\n        templateUrl: 'pages/events-log/details/variables/variables.html'\n    }).state('events-log.details.data-layer', {\n        url: '/data-layer',\n        templateUrl: 'pages/events-log/details/data-layer/data-layer.html'\n    }).state('events-log.details.related-tags', {\n        url: '/related-tags',\n        templateUrl: 'pages/events-log/details/related-tags/related-tags.html'\n    }).state('events-log.details.related-tags.list', {\n        url: '/list',\n        templateUrl: 'pages/events-log/details/related-tags/list/list.html'\n    }).state('events-log.details.related-tags.details', {\n        url: '/{id}',\n        templateUrl: 'pages/events-log/details/related-tags/details/details.html',\n        controller: 'stg.debugger.EventsLogTagDetailsController as details'\n    });\n\n    $urlRouterProvider.otherwise('/overview/tags');\n}]);\n/**\n * Copyright (C) 2015 Digimedia Sp. z.o.o. d/b/a Clearcode\n *\n * This program is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, either version 3 of the License, or (at your option) any\n * later version.\n *\n * This program is distrubuted in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n'use strict';\n\nvar MODULE_NAME = 'stg.debugger';\nvar TEMPLATE_MODULE_NAME = 'stg.debugger.templates';\n\nangular.module(MODULE_NAME, ['ngCookies', 'ui.router']);\n\nangular.module(TEMPLATE_MODULE_NAME, []).constant('ENVIRONMENT', window.stgEnv === undefined ? 'prod' : window.stgEnv);\n/**\n * Copyright (C) 2015 Digimedia Sp. z.o.o. d/b/a Clearcode\n *\n * This program is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, either version 3 of the License, or (at your option) any\n * later version.\n *\n * This program is distrubuted in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n'use strict';\n\nvar countableDirective = function countableDirective($timeout) {\n\n    return {\n        restrict: 'A',\n        replace: true,\n        scope: { model: '=', countClass: '@', delay: '@' },\n        link: function link(scope, element) {\n\n            var initial = scope.model;\n\n            scope.$watch('model', function (value) {\n\n                if (value !== initial) {\n\n                    element.addClass(scope.countClass);\n\n                    $timeout(function () {\n\n                        element.removeClass(scope.countClass);\n                    }, scope.delay || 1000);\n                }\n            });\n        }\n    };\n};\n\ncountableDirective.$inject = ['$timeout'];\n\nangular.module('stg.debugger').directive('countable', countableDirective);\n/**\n * Copyright (C) 2015 Digimedia Sp. z.o.o. d/b/a Clearcode\n *\n * This program is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, either version 3 of the License, or (at your option) any\n * later version.\n *\n * This program is distrubuted in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n'use strict';\n\nvar helpSystemDirective = function helpSystemDirective() {\n\n    return {\n        restrict: 'EA',\n        replace: true,\n        scope: { content: '@', placement: '@' },\n        templateUrl: 'ccHelp.html'\n    };\n};\n\nangular.module('stg.debugger').directive('ccHelp', helpSystemDirective);\n/**\n * Copyright (C) 2015 Digimedia Sp. z.o.o. d/b/a Clearcode\n *\n * This program is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, either version 3 of the License, or (at your option) any\n * later version.\n *\n * This program is distrubuted in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n'use strict';\n\n/**\n * @name StateSummary\n */\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar StateSummary = (function () {\n    function StateSummary() {\n        _classCallCheck(this, StateSummary);\n\n        this.tagSummaryCollection = {};\n        this.dataLayerElement = undefined;\n        this.variableCollection = undefined;\n    }\n\n    /**\n     * Add tag summary to state summary\n     *\n     * @param {number} id\n     * @param {TagSummary} tagSummary\n     */\n\n    _createClass(StateSummary, [{\n        key: 'addTagSummary',\n        value: function addTagSummary(id, tagSummary) {\n            this.tagSummaryCollection[id] = tagSummary;\n\n            return id;\n        }\n\n        /**\n         * Get tag summary\n         *\n         * @param {number} id\n         * @returns {TagSummary|Boolean} tagSummary\n         */\n    }, {\n        key: 'getTagSummary',\n        value: function getTagSummary(id) {\n\n            if (this.tagSummaryCollection[id] === undefined) {\n                return false;\n            }\n\n            return this.tagSummaryCollection[id];\n        }\n\n        /**\n         * @returns {StateSummary.tagSummaryCollection}\n         */\n    }, {\n        key: 'getTagSummaryCollection',\n        value: function getTagSummaryCollection() {\n            return this.tagSummaryCollection;\n        }\n    }]);\n\n    return StateSummary;\n})();\n\nangular.module('stg.debugger').value('stg.debugger.StateSummary', StateSummary);\n/**\n * Copyright (C) 2015 Digimedia Sp. z.o.o. d/b/a Clearcode\n *\n * This program is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, either version 3 of the License, or (at your option) any\n * later version.\n *\n * This program is distrubuted in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n'use strict';\n\n/**\n * @name TagSummary\n */\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar TagSummary = (function () {\n    function TagSummary() {\n        _classCallCheck(this, TagSummary);\n\n        this.id = undefined;\n        this.$name = '';\n        this.$code = '';\n        this.$fired = 0;\n        this.$respectVisitorsPrivacy = false;\n        this.$disableInDebugMode = false;\n        this.$triggers = [];\n        this.$dataLayerStates = [];\n    }\n\n    /**\n     * @returns {string}\n     */\n\n    _createClass(TagSummary, [{\n        key: 'addDataLayerState',\n\n        /**\n         * @param {Object} dataLayerState\n         * @return {TagSummary}\n         */\n        value: function addDataLayerState(dataLayerState) {\n            this.$dataLayerStates.push(dataLayerState);\n\n            return this;\n        }\n\n        /**\n         * @param {Object} dataLayerState\n         * @return {Booleam}\n         */\n    }, {\n        key: 'hasDataLayerState',\n        value: function hasDataLayerState(dataLayerState) {\n            for (var index in this.$dataLayerStates) {\n                if (this.$dataLayerStates[index] === dataLayerState) {\n                    return true;\n                }\n            }\n\n            return false;\n        }\n\n        /**\n         * @returns {number}\n         */\n    }, {\n        key: 'increaseFiredCount',\n        value: function increaseFiredCount() {\n            this.$fired++;\n\n            return this;\n        }\n\n        /**\n         * return void\n         */\n    }, {\n        key: 'markResolvedTriggers',\n        value: function markResolvedTriggers(resolvedTriggerIds) {\n\n            for (var index in this.$triggers) {\n\n                this.$triggers[index].resolved = resolvedTriggerIds.indexOf(this.$triggers[index].id) > -1;\n            }\n        }\n\n        /**\n         * return void\n         */\n    }, {\n        key: 'markResolvedConditions',\n        value: function markResolvedConditions(triggerId, resolveConditionsIndexes) {\n\n            for (var index in this.$triggers[triggerId].conditions) {\n\n                this.$triggers[triggerId].conditions[index].resolved = false;\n            }\n\n            for (var index in resolveConditionsIndexes) {\n\n                this.$triggers[triggerId].conditions[index].resolved = true;\n            }\n        }\n    }, {\n        key: 'isRespectVisitorsPrivacy',\n        value: function isRespectVisitorsPrivacy(doNotTrackEnabled) {\n            return this.respectVisitorsPrivacy && doNotTrackEnabled;\n        }\n    }, {\n        key: 'isFiredMoreThenOnce',\n        value: function isFiredMoreThenOnce() {\n            return this.firedCount > 1 && !this.disableInDebugMode;\n        }\n    }, {\n        key: 'isFiredOnce',\n        value: function isFiredOnce() {\n            return this.firedCount === 1 && !this.disableInDebugMode;\n        }\n    }, {\n        key: 'isFired',\n        value: function isFired() {\n            return this.firedCount > 0 && !this.disableInDebugMode;\n        }\n    }, {\n        key: 'isDisabled',\n        value: function isDisabled() {\n            return this.disableInDebugMode;\n        }\n    }, {\n        key: 'name',\n        get: function get() {\n            return this.$name;\n        },\n\n        /**\n         * @param {string} name\n         */\n        set: function set(name) {\n            this.$name = name;\n\n            return this;\n        }\n\n        /**\n         * Returns\n         *\n         * @returns {string}\n         */\n    }, {\n        key: 'code',\n        get: function get() {\n            return this.$code;\n        },\n\n        /**\n         *\n         * @param {string} code\n         */\n        set: function set(code) {\n            this.$code = code;\n\n            return this;\n        }\n\n        /**\n         * Returns\n         *\n         * @returns {string}\n         */\n    }, {\n        key: 'disableInDebugMode',\n        get: function get() {\n            return this.$disableInDebugMode;\n        },\n\n        /**\n         *\n         * @param {string} disableInDebugMode\n         */\n        set: function set(disableInDebugMode) {\n            this.$disableInDebugMode = disableInDebugMode;\n\n            return this;\n        }\n\n        /**\n         * Returns\n         *\n         * @returns {boolean}\n         */\n    }, {\n        key: 'respectVisitorsPrivacy',\n        get: function get() {\n            return this.$respectVisitorsPrivacy;\n        },\n\n        /**\n         *\n         * @param {boolean} respectVisitorsPrivacy\n         */\n        set: function set(respectVisitorsPrivacy) {\n            this.$respectVisitorsPrivacy = respectVisitorsPrivacy;\n\n            return this;\n        }\n\n        /**\n         * Count of how many times tag is fired\n         *\n         * @returns {number}\n         */\n    }, {\n        key: 'firedCount',\n        get: function get() {\n            return this.$fired;\n        }\n\n        /**\n         * Returns array of triggers related to tag\n         *\n         * @returns {Array}\n         */\n    }, {\n        key: 'triggers',\n        get: function get() {\n\n            return this.$triggers;\n        }\n\n        /**\n         * @returns {Array}\n         */\n    }, {\n        key: 'firedTriggers',\n        get: function get() {\n            var results = [];\n\n            for (var index in this.$triggers) {\n                if (this.$triggers[index].resolved) {\n                    results.push(this.$triggers[index]);\n                }\n            }\n\n            return results;\n        },\n\n        /**\n         * @param {Array} triggers\n         */\n        set: function set(triggers) {\n            this.$triggers = triggers;\n\n            return this;\n        }\n\n        /**\n         * @returns {Array}\n         */\n    }, {\n        key: 'notFiredTriggers',\n        get: function get() {\n            var results = [];\n\n            for (var index in this.$triggers) {\n                if (this.$triggers[index].resolved === undefined || this.$triggers[index].resolved === false) {\n                    results.push(this.$triggers[index]);\n                }\n            }\n\n            return results;\n        }\n    }]);\n\n    return TagSummary;\n})();\n\nangular.module('stg.debugger').value('stg.debugger.TagSummary', TagSummary);\n/**\n * Copyright (C) 2015 Digimedia Sp. z.o.o. d/b/a Clearcode\n *\n * This program is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, either version 3 of the License, or (at your option) any\n * later version.\n *\n * This program is distrubuted in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n'use strict';\n\n/**\n * {Element}\n */\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar div;\n\n/**\n * @name Wrapper\n */\n\nvar Wrapper = (function () {\n\n    /**\n     * @param {String} $id\n     */\n\n    function Wrapper($id) {\n        _classCallCheck(this, Wrapper);\n\n        div = window.parent.document.getElementById($id);\n        this.navbar = window.document.getElementById('navbar');\n\n        if (this.isMobile()) {\n\n            this.navbar.style.background = '#2e9354';\n        }\n    }\n\n    _createClass(Wrapper, [{\n        key: 'isMobile',\n        value: function isMobile() {\n\n            return window.parent.innerWidth < 400;\n        }\n\n        /**\n         * Maximize debugger window.\n         */\n    }, {\n        key: 'maximize',\n        value: function maximize() {\n\n            if (div !== null) {\n\n                if (this.isMobile()) {\n\n                    div.style.width = '100%';\n                } else {\n\n                    div.style.width = '400px';\n                }\n\n                div.style.height = '100%';\n                div.style.position = 'fixed';\n                div.style.zIndex = '2147483647';\n                div.style.right = 0;\n                div.style.top = 0;\n\n                setTimeout(function () {\n                    angular.element(window.document.body).removeClass('minimize');\n                }, 500);\n            }\n        }\n\n        /**\n         * Minimize debugger window.\n         */\n    }, {\n        key: 'minimize',\n        value: function minimize() {\n\n            if (div !== null) {\n\n                if (this.isMobile()) {\n\n                    div.style.width = '100%';\n                    div.style.height = '60px';\n                } else {\n\n                    div.style.width = '60px';\n                }\n\n                angular.element(window.document.body).addClass('minimize');\n            }\n        }\n    }], [{\n        key: 'wrapperFactory',\n        value: function wrapperFactory(id) {\n\n            return new Wrapper(id);\n        }\n    }]);\n\n    return Wrapper;\n})();\n\nangular.module('stg.debugger').value('seventagContainerDebuggerId', 'seventag_container_debugger').factory('stg.debugger.wrapper', ['seventagContainerDebuggerId', Wrapper.wrapperFactory]);\n/**\n * Copyright (C) 2015 Digimedia Sp. z.o.o. d/b/a Clearcode\n *\n * This program is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, either version 3 of the License, or (at your option) any\n * later version.\n *\n * This program is distrubuted in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n'use strict';\n\n/**\n * @type {number}\n */\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar STACK_LIMIT = 300;\n\n/**\n * @name DataLayerLimitedStack\n */\n\nvar DataLayerLimitedStack = (function () {\n\n  /**\n   * @param {Integer|undefined} $limit\n   */\n\n  function DataLayerLimitedStack($limit) {\n    _classCallCheck(this, DataLayerLimitedStack);\n\n    this.setLimit($limit);\n    this.$stack = [];\n  }\n\n  /**\n   * @param $limit\n   */\n\n  _createClass(DataLayerLimitedStack, [{\n    key: 'setLimit',\n    value: function setLimit($limit) {\n      this.$limit = this.isLimitDefined($limit) ? $limit : STACK_LIMIT;\n    }\n\n    /**\n     * @param $limit\n     * @returns {boolean}\n     */\n  }, {\n    key: 'isLimitDefined',\n    value: function isLimitDefined($limit) {\n      return $limit !== undefined;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n  }, {\n    key: 'isLimitExceeded',\n    value: function isLimitExceeded() {\n      return this.$stack.length >= this.$limit;\n    }\n\n    /**\n     * @param element\n     */\n  }, {\n    key: 'push',\n    value: function push(element) {\n      if (this.isLimitExceeded()) {\n        this.$stack.shift();\n      }\n\n      this.$stack.push(element);\n    }\n\n    /**\n     * @returns {Array}\n     */\n  }, {\n    key: 'get',\n\n    /**\n     * @returns {Object|boolean}\n     */\n    value: function get(id) {\n      return this.$stack[id] !== undefined ? this.$stack[id] : false;\n    }\n  }, {\n    key: 'stack',\n    get: function get() {\n      return this.$stack;\n    }\n  }]);\n\n  return DataLayerLimitedStack;\n})();\n\nDataLayerLimitedStack.$inject = [];\n\nangular.module('stg.debugger').service('stg.debugger.dataLayerLimitedStack', DataLayerLimitedStack);\n/**\n * Copyright (C) 2015 Digimedia Sp. z.o.o. d/b/a Clearcode\n *\n * This program is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, either version 3 of the License, or (at your option) any\n * later version.\n *\n * This program is distrubuted in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n'use strict';\n\n/**\n * @name DataLayerReport\n */\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar DataLayerReport = (function () {\n    function DataLayerReport() {\n        _classCallCheck(this, DataLayerReport);\n\n        var $this = this;\n    }\n\n    /**\n     * Returns fired tags list\n     *\n     * @param Object summary\n     * @returns {Array}\n     */\n\n    _createClass(DataLayerReport, [{\n        key: 'getFiredTags',\n        value: function getFiredTags(summary) {\n\n            var tags = [];\n\n            for (var tag in summary.tagSummaryCollection) {\n\n                if (summary.tagSummaryCollection[tag].firedTriggers.length > 0 && !summary.tagSummaryCollection[tag].disableInDebugMode) {\n\n                    tags.push(summary.tagSummaryCollection[tag]);\n                }\n            }\n\n            return tags;\n        }\n\n        /**\n         * Returns tags which are fired but disabled\n         *\n         * @param Object dataLayer\n         * @returns {Array}\n         */\n    }, {\n        key: 'getDisabledFiredTags',\n        value: function getDisabledFiredTags(summary) {\n\n            var tags = [];\n\n            for (var tag in summary.tagSummaryCollection) {\n\n                if (summary.tagSummaryCollection[tag].firedTriggers.length > 0 && summary.tagSummaryCollection[tag].disableInDebugMode) {\n\n                    tags.push(summary.tagSummaryCollection[tag]);\n                }\n            }\n\n            return tags;\n        }\n\n        /**\n         * Returns not fired tags list\n         *\n         * @param Object dataLayer\n         * @returns {Array}\n         */\n    }, {\n        key: 'getNotFiredTags',\n        value: function getNotFiredTags(summary) {\n\n            var tags = [];\n\n            for (var tag in summary.tagSummaryCollection) {\n\n                if (summary.tagSummaryCollection[tag].firedTriggers.length === 0) {\n\n                    tags.push(summary.tagSummaryCollection[tag]);\n                }\n            }\n\n            return tags;\n        }\n    }]);\n\n    return DataLayerReport;\n})();\n\nDataLayerReport.$inject = [];\n\nangular.module('stg.debugger').service('stg.debugger.DataLayerReport', DataLayerReport);\n/**\n * Copyright (C) 2015 Digimedia Sp. z.o.o. d/b/a Clearcode\n *\n * This program is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, either version 3 of the License, or (at your option) any\n * later version.\n *\n * This program is distrubuted in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n'use strict';\n\n/**\n * @name Debugger\n */\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar Debugger = (function () {\n    /**\n     * @param {window.sevenTag} $container\n     */\n\n    function Debugger($container, $timeout, $minimizedMemento) {\n        _classCallCheck(this, Debugger);\n\n        if ($container.debugOptions !== undefined) {\n            if ($container.debugOptions.containerName !== undefined) {\n                this.$containerName = $container.debugOptions.containerName;\n            }\n        }\n\n        this.$debugger = $container['debugger'];\n        this.$tagTree = angular.copy($container.tagTree);\n        this.$timeout = $timeout;\n        this.minimizedMemento = $minimizedMemento;\n    }\n\n    /**\n     * Close debug iframe\n     */\n\n    _createClass(Debugger, [{\n        key: 'close',\n        value: function close() {\n\n            if (this.$debugger.close !== undefined) {\n                this.$debugger.close();\n            }\n        }\n\n        /**\n         * @returns {string}\n         */\n    }, {\n        key: 'getContainerName',\n        value: function getContainerName() {\n            return this.$containerName;\n        }\n\n        /**\n         * @returns {Array}\n         */\n    }, {\n        key: 'getTagTree',\n        value: function getTagTree() {\n            return this.$tagTree;\n        }\n\n        /**\n         * @returns {Object}\n         */\n    }, {\n        key: 'getDataLayerStates',\n        value: function getDataLayerStates() {\n\n            if (this.$debugger.stack !== undefined) {\n                return this.$debugger.stack;\n            }\n        }\n\n        /**\n         * @param {Function} listener\n         */\n    }, {\n        key: 'addListenerContainerStates',\n        value: function addListenerContainerStates(listener) {\n            var _this = this;\n\n            this.$debugger.addListener(function () {\n                _this.$timeout(listener);\n            });\n        }\n    }]);\n\n    return Debugger;\n})();\n\nDebugger.$inject = ['$container', '$timeout', 'stg.debugger.minimizedMemento'];\n\nangular.module('stg.debugger').service('stg.debugger.debugger', Debugger);\n/**\n * Copyright (C) 2015 Digimedia Sp. z.o.o. d/b/a Clearcode\n *\n * This program is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, either version 3 of the License, or (at your option) any\n * later version.\n *\n * This program is distrubuted in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n'use strict';\n\n/**\n * @name MinimizedMemento\n */\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar MinimizedMemento = (function () {\n    /**\n     * @param {Wrapper} $wrapper\n     * @param {Cookies} $cookies\n     */\n\n    function MinimizedMemento($wrapper, $cookies) {\n        _classCallCheck(this, MinimizedMemento);\n\n        this.$wrapper = $wrapper;\n        this.$cookies = $cookies;\n        this.setMinimized(false);\n    }\n\n    _createClass(MinimizedMemento, [{\n        key: 'setMinimized',\n        value: function setMinimized(minimized) {\n            window.parent.stgDebuggerMinimized = minimized;\n        }\n    }, {\n        key: 'isMinimized',\n        value: function isMinimized() {\n            return window.parent.stgDebuggerMinimized;\n        }\n    }, {\n        key: 'isMaximized',\n        value: function isMaximized() {\n            return !this.isMinimized();\n        }\n    }, {\n        key: 'maximize',\n        value: function maximize() {\n            this.setMinimized(false);\n            this.$wrapper.maximize();\n        }\n    }, {\n        key: 'minimize',\n        value: function minimize() {\n            this.setMinimized(true);\n            this.$wrapper.minimize();\n        }\n    }]);\n\n    return MinimizedMemento;\n})();\n\nMinimizedMemento.$inject = ['stg.debugger.wrapper', '$cookies'];\n\nangular.module('stg.debugger').service('stg.debugger.minimizedMemento', MinimizedMemento);\n/**\n * Copyright (C) 2015 Digimedia Sp. z.o.o. d/b/a Clearcode\n *\n * This program is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, either version 3 of the License, or (at your option) any\n * later version.\n *\n * This program is distrubuted in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar StateSummary = undefined;\nvar TagSummary = undefined;\n/**\n * @name Report\n */\n\nvar Report = (function () {\n    /**\n     * @param {Debugger} $debugger\n     * @param {StateSummary} $StateSummary\n     * @param {TagSummary} $TagSummary\n     * @param {DataLayerLimitedStack} $dataLayerLimitedStack\n     */\n\n    function Report($debugger, $StateSummary, $TagSummary, $dataLayerLimitedStack, $filter) {\n        _classCallCheck(this, Report);\n\n        var $this = this;\n\n        StateSummary = $StateSummary;\n        TagSummary = $TagSummary;\n        this.$filter = $filter;\n\n        this.$debugger = $debugger;\n\n        this.$dataLayerLimitedStack = $dataLayerLimitedStack;\n\n        this.stateSummary = new StateSummary();\n\n        var tagTree = $debugger.getTagTree();\n\n        // Prepare tag summary\n        var tagSummary = undefined;\n\n        for (var tag in tagTree) {\n            tagSummary = new TagSummary();\n            tagSummary.id = tagTree[tag].id;\n            tagSummary.name = tagTree[tag].name;\n            tagSummary.code = tagTree[tag].code;\n            tagSummary.firedTriggers = tagTree[tag].triggers;\n            tagSummary.disableInDebugMode = tagTree[tag].disableInDebugMode;\n            tagSummary.respectVisitorsPrivacy = tagTree[tag].respectVisitorsPrivacy;\n\n            this.stateSummary.addTagSummary(tagTree[tag].id, tagSummary);\n        }\n\n        // Run for the first time\n        this.updateSummary();\n\n        $debugger.addListenerContainerStates(function () {\n            $this.updateSummary();\n        });\n    }\n\n    /**\n     * Update report summary about states\n     */\n\n    _createClass(Report, [{\n        key: 'updateSummary',\n        value: function updateSummary() {\n\n            var states = this.$debugger.getDataLayerStates(),\n                tagSummary = undefined;\n\n            while (states.length) {\n\n                var state = states.shift();\n\n                var tags = state.tags;\n\n                var summary = new StateSummary();\n\n                summary.dataLayerElement = state.dataLayerElement;\n                summary.variableCollection = state.variableCollection;\n\n                for (var tag in tags) {\n\n                    tagSummary = new TagSummary();\n                    tagSummary.id = tags[tag].id;\n                    tagSummary.name = tags[tag].name;\n                    tagSummary.code = tags[tag].code;\n                    tagSummary.firedTriggers = tags[tag].triggers;\n                    tagSummary.resolved = tags[tag].resolved;\n                    tagSummary.disableInDebugMode = tags[tag].disableInDebugMode;\n                    tagSummary.respectVisitorsPrivacy = tags[tag].respectVisitorsPrivacy;\n\n                    summary.addTagSummary(tags[tag].id, tagSummary);\n\n                    if (tags[tag].resolved) {\n\n                        if (tags[tag].id !== undefined) {\n\n                            var resolvedTriggersIds = [];\n\n                            for (var trigger in tags[tag].triggers) {\n                                if (tags[tag].triggers[trigger].resolved) {\n                                    resolvedTriggersIds.push(tags[tag].triggers[trigger].id);\n                                }\n                            }\n\n                            this.stateSummary.getTagSummary(tags[tag].id).increaseFiredCount().markResolvedTriggers(resolvedTriggersIds);\n                        }\n                    }\n                }\n\n                this.$dataLayerLimitedStack.push(summary);\n            }\n        }\n\n        /**\n         * Returns fired tags list\n         *\n         * @returns {Array}\n         */\n    }, {\n        key: 'getFiredTags',\n        value: function getFiredTags() {\n\n            return this.$filter('firedTags')(this.stateSummary.getTagSummaryCollection());\n        }\n\n        /**\n         * Returns tags which are fired but disabled\n         *\n         * @returns {Array}\n         */\n    }, {\n        key: 'getDisabledFiredTags',\n        value: function getDisabledFiredTags() {\n\n            return this.$filter('firedDisabledTags')(this.stateSummary.getTagSummaryCollection());\n        }\n\n        /**\n         * Returns not fired tags list\n         *\n         * @returns {*}\n         */\n    }, {\n        key: 'getNotFiredTags',\n        value: function getNotFiredTags() {\n\n            return this.$filter('notFiredTags')(this.stateSummary.getTagSummaryCollection());\n        }\n\n        /**\n         * @returns {DataLayerLimitedStack}\n         */\n    }, {\n        key: 'dataLayerLimitedStack',\n        get: function get() {\n            return this.$dataLayerLimitedStack;\n        }\n    }]);\n\n    return Report;\n})();\n\nReport.$inject = ['stg.debugger.debugger', 'stg.debugger.StateSummary', 'stg.debugger.TagSummary', 'stg.debugger.dataLayerLimitedStack', '$filter'];\n\nangular.module('stg.debugger').service('stg.debugger.report', Report);\n/**\n * Copyright (C) 2015 Digimedia Sp. z.o.o. d/b/a Clearcode\n *\n * This program is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, either version 3 of the License, or (at your option) any\n * later version.\n *\n * This program is distrubuted in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n'use strict';\n\n(function (parent) {\n  angular.module('stg.debugger').value('$container', parent.sevenTag);\n})(parent);\n/**\n * Copyright (C) 2015 Digimedia Sp. z.o.o. d/b/a Clearcode\n *\n * This program is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, either version 3 of the License, or (at your option) any\n * later version.\n *\n * This program is distrubuted in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n'use strict';\n\n(function (parent) {\n  angular.module('stg.debugger').value('$container', parent.sevenTag);\n})(parent);\n/**\n * Copyright (C) 2015 Digimedia Sp. z.o.o. d/b/a Clearcode\n *\n * This program is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, either version 3 of the License, or (at your option) any\n * later version.\n *\n * This program is distrubuted in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n'use strict';\n\n/**\n * @name EventsLogDetailsController\n */\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar EventsLogDetailsController = (function () {\n\n    /**\n     * @param $dataLayerLimitedStack\n     * @param $stateParams\n     */\n\n    function EventsLogDetailsController($dataLayerLimitedStack, $stateParams) {\n        _classCallCheck(this, EventsLogDetailsController);\n\n        this.dataLayerLimitedStack = $dataLayerLimitedStack;\n        this.stateParams = $stateParams;\n    }\n\n    /**\n     * @returns {*}\n     */\n\n    _createClass(EventsLogDetailsController, [{\n        key: 'summary',\n        get: function get() {\n\n            return this.dataLayerLimitedStack.get(this.stateParams.eventId);\n        }\n    }, {\n        key: 'eventId',\n        get: function get() {\n\n            return this.stateParams.eventId;\n        }\n    }, {\n        key: 'tagSummary',\n        get: function get() {\n\n            if (angular.equals({}, this.summary.tagSummaryCollection)) {\n                return undefined;\n            }\n\n            return this.summary.tagSummaryCollection;\n        }\n    }]);\n\n    return EventsLogDetailsController;\n})();\n\nEventsLogDetailsController.$inject = ['stg.debugger.dataLayerLimitedStack', '$stateParams'];\n\nangular.module('stg.debugger').controller('stg.debugger.EventsLogDetailsController', EventsLogDetailsController);\n/**\n * Copyright (C) 2015 Digimedia Sp. z.o.o. d/b/a Clearcode\n *\n * This program is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, either version 3 of the License, or (at your option) any\n * later version.\n *\n * This program is distrubuted in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n'use strict';\n\n/**\n * @name OverviewTagDetailsController\n */\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar OverviewTagDetailsController = (function () {\n\n    /**\n     * @param $report\n     * @param $stateParams\n     * @param $container\n     */\n\n    function OverviewTagDetailsController($report, $stateParams, $container) {\n        _classCallCheck(this, OverviewTagDetailsController);\n\n        this.report = $report;\n        this.stateParams = $stateParams;\n        this.doNotTrackEnabled = $container.$doNotTrack.isEnabled();\n    }\n\n    /**\n     * Returns tag details based on routing parameter\n     *\n     * @returns {TagSummary|Boolean}\n     */\n\n    _createClass(OverviewTagDetailsController, [{\n        key: 'tagSummary',\n        get: function get() {\n\n            return this.report.stateSummary.getTagSummary(this.stateParams.id);\n        }\n    }]);\n\n    return OverviewTagDetailsController;\n})();\n\nOverviewTagDetailsController.$inject = ['stg.debugger.report', '$stateParams', '$container'];\n\nangular.module('stg.debugger').controller('stg.debugger.OverviewTagDetailsController', OverviewTagDetailsController);\n/**\n * Copyright (C) 2015 Digimedia Sp. z.o.o. d/b/a Clearcode\n *\n * This program is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, either version 3 of the License, or (at your option) any\n * later version.\n *\n * This program is distrubuted in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n'use strict';\n\n/**\n * @name EventsLogController\n */\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar EventsLogController = (function () {\n\n    /**\n     * @param $report\n     */\n\n    function EventsLogController($report) {\n        _classCallCheck(this, EventsLogController);\n\n        this.report = $report;\n    }\n\n    /**\n     * Returns event logs for container\n     *\n     * @returns {DataLayerLimitedStack|StatesController.dataLayerLimitedStack|*}\n     */\n\n    _createClass(EventsLogController, [{\n        key: 'eventLog',\n        get: function get() {\n\n            return this.report.dataLayerLimitedStack.stack;\n        }\n    }]);\n\n    return EventsLogController;\n})();\n\nEventsLogController.$inject = ['stg.debugger.report'];\n\nangular.module('stg.debugger').controller('stg.debugger.EventsLogController', EventsLogController);\n/**\n * Copyright (C) 2015 Digimedia Sp. z.o.o. d/b/a Clearcode\n *\n * This program is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, either version 3 of the License, or (at your option) any\n * later version.\n *\n * This program is distrubuted in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n'use strict';\n\n/**\n * @name OverviewTagsController\n */\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar OverviewTagsController = (function () {\n\n    /**\n     * @param {Report} $report\n     * @param {$state} $state\n     * @param {$container} $container\n     */\n\n    function OverviewTagsController($report, $state, $container) {\n        _classCallCheck(this, OverviewTagsController);\n\n        this.report = $report;\n        this.state = $state;\n        this.doNotTrackEnabled = $container.$doNotTrack.isEnabled();\n    }\n\n    /**\n     * Returns tags collection with information about them\n     *\n     * @returns {StateSummary.tagSummaryCollection|*}\n     */\n\n    _createClass(OverviewTagsController, [{\n        key: 'tags',\n        get: function get() {\n\n            if (angular.equals({}, this.report.stateSummary.tagSummaryCollection)) {\n                return undefined;\n            }\n\n            return this.report.stateSummary.tagSummaryCollection;\n        }\n    }]);\n\n    return OverviewTagsController;\n})();\n\nOverviewTagsController.$inject = ['stg.debugger.report', '$state', '$container'];\n\nangular.module('stg.debugger').controller('stg.debugger.OverviewTagsController', OverviewTagsController);\n/**\n * Copyright (C) 2015 Digimedia Sp. z.o.o. d/b/a Clearcode\n *\n * This program is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, either version 3 of the License, or (at your option) any\n * later version.\n *\n * This program is distrubuted in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n'use strict';\n\n/**\n * @name EventsLogTagDetailsController\n */\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar EventsLogTagDetailsController = (function () {\n\n    /**\n     * @param $stateParams\n     * @param $scope\n     */\n\n    function EventsLogTagDetailsController($stateParams, $scope) {\n        _classCallCheck(this, EventsLogTagDetailsController);\n\n        this.scope = $scope;\n        this.stateParams = $stateParams;\n    }\n\n    /**\n     * Returns tag details based on routing parameter\n     *\n     * @returns {TagSummary|Boolean}\n     */\n\n    _createClass(EventsLogTagDetailsController, [{\n        key: 'tagSummary',\n        get: function get() {\n\n            return this.scope.view.summary.getTagSummary(this.stateParams.id);\n        }\n    }]);\n\n    return EventsLogTagDetailsController;\n})();\n\nEventsLogTagDetailsController.$inject = ['$stateParams', '$scope'];\n\nangular.module('stg.debugger').controller('stg.debugger.EventsLogTagDetailsController', EventsLogTagDetailsController);","/**\n * Copyright (C) 2015 Digimedia Sp. z.o.o. d/b/a Clearcode\n *\n * This program is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, either version 3 of the License, or (at your option) any\n * later version.\n *\n * This program is distrubuted in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n'use strict';\n\nconst MODULE_NAME = 'stg.debugger';\nconst TEMPLATE_MODULE_NAME = 'stg.debugger.templates';\n\nangular\n    .module(MODULE_NAME, [\n        'ngCookies',\n        'ui.router'\n    ]);\n\nangular\n    .module(TEMPLATE_MODULE_NAME, [\n    ])\n    .constant('ENVIRONMENT', window.stgEnv === undefined ? 'prod' : window.stgEnv);","/**\n * Copyright (C) 2015 Digimedia Sp. z.o.o. d/b/a Clearcode\n *\n * This program is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, either version 3 of the License, or (at your option) any\n * later version.\n *\n * This program is distrubuted in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n'use strict';\n\nvar countableDirective = ($timeout) => {\n\n    return {\n        restrict: 'A',\n        replace: true,\n        scope: { model: '=', countClass: '@', delay: '@' },\n        link: (scope, element) => {\n\n            let initial = scope.model;\n\n            scope.$watch('model', (value) => {\n\n                if (value !== initial) {\n\n                    element.addClass(scope.countClass);\n\n                    $timeout(() => {\n\n                        element.removeClass(scope.countClass);\n\n                    }, scope.delay || 1000);\n\n                }\n\n            });\n\n        }\n    };\n\n};\n\ncountableDirective.$inject = [\n    '$timeout'\n];\n\nangular\n    .module('stg.debugger')\n    .directive('countable', countableDirective);\n","/**\n * Copyright (C) 2015 Digimedia Sp. z.o.o. d/b/a Clearcode\n *\n * This program is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, either version 3 of the License, or (at your option) any\n * later version.\n *\n * This program is distrubuted in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n'use strict';\n\nvar helpSystemDirective = () => {\n\n    return {\n        restrict: 'EA',\n        replace: true,\n        scope: { content: '@', placement: '@' },\n        templateUrl: 'ccHelp.html'\n    };\n\n};\n\nangular\n    .module('stg.debugger')\n    .directive( 'ccHelp', helpSystemDirective);\n","/**\n * Copyright (C) 2015 Digimedia Sp. z.o.o. d/b/a Clearcode\n *\n * This program is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, either version 3 of the License, or (at your option) any\n * later version.\n *\n * This program is distrubuted in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n'use strict';\n\n/**\n * @name StateSummary\n */\nclass StateSummary {\n    constructor() {\n        this.tagSummaryCollection = {};\n        this.dataLayerElement = undefined;\n        this.variableCollection = undefined;\n    }\n\n    /**\n     * Add tag summary to state summary\n     *\n     * @param {number} id\n     * @param {TagSummary} tagSummary\n     */\n    addTagSummary(id, tagSummary) {\n        this.tagSummaryCollection[id] = tagSummary;\n\n        return id;\n    }\n\n    /**\n     * Get tag summary\n     *\n     * @param {number} id\n     * @returns {TagSummary|Boolean} tagSummary\n     */\n    getTagSummary(id) {\n\n        if (this.tagSummaryCollection[id] === undefined) {\n            return false;\n        }\n\n        return this.tagSummaryCollection[id];\n    }\n\n    /**\n     * @returns {StateSummary.tagSummaryCollection}\n     */\n    getTagSummaryCollection() {\n        return this.tagSummaryCollection;\n    }\n}\n\nangular\n    .module('stg.debugger')\n    .value('stg.debugger.StateSummary', StateSummary);\n","/**\n * Copyright (C) 2015 Digimedia Sp. z.o.o. d/b/a Clearcode\n *\n * This program is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, either version 3 of the License, or (at your option) any\n * later version.\n *\n * This program is distrubuted in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n'use strict';\n\n/**\n * @name TagSummary\n */\nclass TagSummary {\n\n    constructor() {\n        this.id = undefined;\n        this.$name = '';\n        this.$code = '';\n        this.$fired = 0;\n        this.$respectVisitorsPrivacy = false;\n        this.$disableInDebugMode = false;\n        this.$triggers = [];\n        this.$dataLayerStates = [];\n    }\n\n    /**\n     * @returns {string}\n     */\n    get name() {\n        return this.$name;\n    }\n\n    /**\n     * @param {string} name\n     */\n    set name(name) {\n        this.$name = name;\n\n        return this;\n    }\n\n    /**\n     * Returns\n     *\n     * @returns {string}\n     */\n    get code() {\n        return this.$code;\n    }\n\n    /**\n     *\n     * @param {string} code\n     */\n    set code(code) {\n        this.$code = code;\n\n        return this;\n    }\n\n    /**\n     * Returns\n     *\n     * @returns {string}\n     */\n    get disableInDebugMode() {\n        return this.$disableInDebugMode;\n    }\n\n    /**\n     *\n     * @param {string} disableInDebugMode\n     */\n    set disableInDebugMode(disableInDebugMode) {\n        this.$disableInDebugMode = disableInDebugMode;\n\n        return this;\n    }\n\n    /**\n     * Returns\n     *\n     * @returns {boolean}\n     */\n    get respectVisitorsPrivacy() {\n        return this.$respectVisitorsPrivacy;\n    }\n\n    /**\n     *\n     * @param {boolean} respectVisitorsPrivacy\n     */\n    set respectVisitorsPrivacy(respectVisitorsPrivacy) {\n        this.$respectVisitorsPrivacy = respectVisitorsPrivacy;\n\n        return this;\n    }\n\n    /**\n     * Count of how many times tag is fired\n     *\n     * @returns {number}\n     */\n    get firedCount() {\n        return this.$fired;\n    }\n\n    /**\n     * Returns array of triggers related to tag\n     *\n     * @returns {Array}\n     */\n    get triggers() {\n\n        return this.$triggers;\n\n    }\n\n    /**\n     * @returns {Array}\n     */\n    get firedTriggers() {\n        var results = [];\n\n        for (let index in this.$triggers) {\n            if (this.$triggers[index].resolved) {\n                results.push(this.$triggers[index]);\n            }\n        }\n\n        return results;\n    }\n\n    /**\n     * @param {Array} triggers\n     */\n    set firedTriggers(triggers) {\n        this.$triggers = triggers;\n\n        return this;\n    }\n\n    /**\n     * @returns {Array}\n     */\n    get notFiredTriggers() {\n        var results = [];\n\n        for (let index in this.$triggers) {\n            if (this.$triggers[index].resolved === undefined || this.$triggers[index].resolved === false) {\n                results.push(this.$triggers[index]);\n            }\n        }\n\n        return results;\n    }\n\n    /**\n     * @param {Object} dataLayerState\n     * @return {TagSummary}\n     */\n    addDataLayerState(dataLayerState) {\n        this.$dataLayerStates.push(dataLayerState);\n\n        return this;\n    }\n\n    /**\n     * @param {Object} dataLayerState\n     * @return {Booleam}\n     */\n    hasDataLayerState(dataLayerState) {\n        for(let index in this.$dataLayerStates) {\n            if(this.$dataLayerStates[index] === dataLayerState) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * @returns {number}\n     */\n    increaseFiredCount() {\n        this.$fired++;\n\n        return this;\n    }\n\n    /**\n     * return void\n     */\n    markResolvedTriggers(resolvedTriggerIds) {\n\n        for (let index in this.$triggers) {\n\n            this.$triggers[index].resolved = resolvedTriggerIds.indexOf(this.$triggers[index].id) > -1;\n\n        }\n\n    }\n\n    /**\n     * return void\n     */\n    markResolvedConditions(triggerId, resolveConditionsIndexes) {\n\n        for (let index in this.$triggers[triggerId].conditions) {\n\n            this.$triggers[triggerId].conditions[index].resolved = false;\n\n        }\n\n        for (let index in resolveConditionsIndexes) {\n\n            this.$triggers[triggerId].conditions[index].resolved = true;\n\n        }\n\n    }\n\n    isRespectVisitorsPrivacy (doNotTrackEnabled) {\n        return this.respectVisitorsPrivacy && doNotTrackEnabled;\n    }\n\n    isFiredMoreThenOnce () {\n        return this.firedCount > 1 && !this.disableInDebugMode;\n    }\n\n    isFiredOnce () {\n        return this.firedCount === 1 && !this.disableInDebugMode;\n    }\n\n    isFired () {\n        return this.firedCount > 0 && !this.disableInDebugMode;\n    }\n\n    isDisabled () {\n        return this.disableInDebugMode;\n    }\n\n}\n\nangular\n    .module('stg.debugger')\n    .value('stg.debugger.TagSummary', TagSummary);\n","/**\n * Copyright (C) 2015 Digimedia Sp. z.o.o. d/b/a Clearcode\n *\n * This program is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, either version 3 of the License, or (at your option) any\n * later version.\n *\n * This program is distrubuted in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n'use strict';\n\n/**\n * {Element}\n */\nvar div;\n\n/**\n * @name Wrapper\n */\nclass Wrapper {\n\n    /**\n     * @param {String} $id\n     */\n    constructor($id) {\n\n        div = window.parent.document.getElementById($id);\n        this.navbar = window.document.getElementById('navbar');\n\n        if (this.isMobile()) {\n\n            this.navbar.style.background = '#2e9354';\n\n        }\n\n    }\n\n    isMobile() {\n\n        return window.parent.innerWidth < 400;\n\n    }\n\n    /**\n     * Maximize debugger window.\n     */\n    maximize() {\n\n        if (div !== null) {\n\n            if (this.isMobile()) {\n\n                div.style.width = '100%';\n\n            } else {\n\n                div.style.width = '400px';\n\n            }\n\n            div.style.height = '100%';\n            div.style.position = 'fixed';\n            div.style.zIndex = '2147483647';\n            div.style.right = 0;\n            div.style.top = 0;\n\n            setTimeout(() => {\n                angular.element(window.document.body).removeClass('minimize');\n            }, 500);\n\n        }\n\n    }\n\n    /**\n     * Minimize debugger window.\n     */\n    minimize() {\n\n        if (div !== null) {\n\n            if (this.isMobile()) {\n\n                div.style.width = '100%';\n                div.style.height = '60px';\n\n            } else {\n\n                div.style.width = '60px';\n\n            }\n\n            angular.element(window.document.body).addClass('minimize');\n        }\n\n    }\n\n    static wrapperFactory(id) {\n\n        return new Wrapper(id);\n    }\n\n}\n\nangular\n    .module('stg.debugger')\n    .value('seventagContainerDebuggerId', 'seventag_container_debugger')\n    .factory('stg.debugger.wrapper', ['seventagContainerDebuggerId', Wrapper.wrapperFactory]);\n","/**\n * Copyright (C) 2015 Digimedia Sp. z.o.o. d/b/a Clearcode\n *\n * This program is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, either version 3 of the License, or (at your option) any\n * later version.\n *\n * This program is distrubuted in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n'use strict';\n\n/**\n * @type {number}\n */\nconst STACK_LIMIT = 300;\n\n/**\n * @name DataLayerLimitedStack\n */\nclass DataLayerLimitedStack {\n\n    /**\n     * @param {Integer|undefined} $limit\n     */\n    constructor($limit) {\n        this.setLimit($limit);\n        this.$stack = [];\n    }\n\n    /**\n     * @param $limit\n     */\n    setLimit ($limit) {\n        this.$limit = this.isLimitDefined($limit) ? $limit : STACK_LIMIT;\n    }\n\n    /**\n     * @param $limit\n     * @returns {boolean}\n     */\n    isLimitDefined ($limit) {\n        return $limit !== undefined;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isLimitExceeded () {\n        return this.$stack.length >= this.$limit;\n    }\n\n    /**\n     * @param element\n     */\n    push (element) {\n        if (this.isLimitExceeded()) {\n            this.$stack.shift();\n        }\n\n        this.$stack.push(element);\n    }\n\n    /**\n     * @returns {Array}\n     */\n    get stack() {\n        return this.$stack;\n    }\n\n    /**\n     * @returns {Object|boolean}\n     */\n    get(id) {\n        return this.$stack[id] !== undefined ? this.$stack[id] : false;\n    }\n}\n\nDataLayerLimitedStack.$inject = [];\n\nangular\n    .module('stg.debugger')\n    .service('stg.debugger.dataLayerLimitedStack', DataLayerLimitedStack);\n","/**\n * Copyright (C) 2015 Digimedia Sp. z.o.o. d/b/a Clearcode\n *\n * This program is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, either version 3 of the License, or (at your option) any\n * later version.\n *\n * This program is distrubuted in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n'use strict';\n\n/**\n * @name DataLayerReport\n */\nclass DataLayerReport {\n\n    constructor() {\n\n        let $this = this;\n\n    }\n\n    /**\n     * Returns fired tags list\n     *\n     * @param Object summary\n     * @returns {Array}\n     */\n    getFiredTags(summary) {\n\n        let tags = [];\n\n        for (let tag in summary.tagSummaryCollection) {\n\n            if (summary.tagSummaryCollection[tag].firedTriggers.length > 0 && !summary.tagSummaryCollection[tag].disableInDebugMode) {\n\n                tags.push(summary.tagSummaryCollection[tag]);\n\n            }\n\n        }\n\n        return tags;\n\n    }\n\n    /**\n     * Returns tags which are fired but disabled\n     *\n     * @param Object dataLayer\n     * @returns {Array}\n     */\n    getDisabledFiredTags(summary) {\n\n        let tags = [];\n\n        for (let tag in summary.tagSummaryCollection) {\n\n            if (summary.tagSummaryCollection[tag].firedTriggers.length > 0 && summary.tagSummaryCollection[tag].disableInDebugMode) {\n\n                tags.push(summary.tagSummaryCollection[tag]);\n\n            }\n\n        }\n\n        return tags;\n\n    }\n\n    /**\n     * Returns not fired tags list\n     *\n     * @param Object dataLayer\n     * @returns {Array}\n     */\n    getNotFiredTags(summary) {\n\n        let tags = [];\n\n        for(let tag in summary.tagSummaryCollection) {\n\n            if(summary.tagSummaryCollection[tag].firedTriggers.length === 0) {\n\n                tags.push(summary.tagSummaryCollection[tag]);\n\n            }\n\n        }\n\n        return tags;\n\n    }\n}\n\nDataLayerReport.$inject = [];\n\nangular\n    .module('stg.debugger')\n    .service('stg.debugger.DataLayerReport', DataLayerReport);\n","/**\n * Copyright (C) 2015 Digimedia Sp. z.o.o. d/b/a Clearcode\n *\n * This program is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, either version 3 of the License, or (at your option) any\n * later version.\n *\n * This program is distrubuted in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n'use strict';\n\n/**\n * @name Debugger\n */\nclass Debugger {\n    /**\n     * @param {window.sevenTag} $container\n     */\n    constructor($container, $timeout, $minimizedMemento) {\n\n        if ($container.debugOptions !== undefined) {\n            if ($container.debugOptions.containerName !== undefined) {\n                this.$containerName = $container.debugOptions.containerName;\n            }\n        }\n\n        this.$debugger = $container.debugger;\n        this.$tagTree = angular.copy($container.tagTree);\n        this.$timeout = $timeout;\n        this.minimizedMemento = $minimizedMemento;\n    }\n\n    /**\n     * Close debug iframe\n     */\n    close() {\n\n        if (this.$debugger.close !== undefined) {\n            this.$debugger.close();\n        }\n    }\n\n    /**\n     * @returns {string}\n     */\n    getContainerName() {\n        return this.$containerName;\n    }\n\n    /**\n     * @returns {Array}\n     */\n    getTagTree() {\n        return this.$tagTree;\n    }\n\n    /**\n     * @returns {Object}\n     */\n    getDataLayerStates() {\n\n        if (this.$debugger.stack !== undefined) {\n            return this.$debugger.stack;\n        }\n    }\n\n    /**\n     * @param {Function} listener\n     */\n    addListenerContainerStates(listener) {\n\n        this.$debugger.addListener(() => {\n            this.$timeout(listener);\n        });\n    }\n\n}\n\nDebugger.$inject = [\n    '$container',\n    '$timeout',\n    'stg.debugger.minimizedMemento'\n];\n\nangular\n    .module('stg.debugger')\n    .service('stg.debugger.debugger', Debugger);\n","/**\n * Copyright (C) 2015 Digimedia Sp. z.o.o. d/b/a Clearcode\n *\n * This program is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, either version 3 of the License, or (at your option) any\n * later version.\n *\n * This program is distrubuted in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n'use strict';\n\n/**\n * @name MinimizedMemento\n */\nclass MinimizedMemento {\n    /**\n     * @param {Wrapper} $wrapper\n     * @param {Cookies} $cookies\n     */\n    constructor($wrapper, $cookies) {\n\n        this.$wrapper = $wrapper;\n        this.$cookies = $cookies;\n        this.setMinimized(false);\n\n    }\n    \n    setMinimized(minimized) {\n      window.parent.stgDebuggerMinimized = minimized;\n    }\n\n    isMinimized() {\n        return window.parent.stgDebuggerMinimized;\n    }\n\n    isMaximized() {\n        return !this.isMinimized();\n    }\n\n    maximize() {\n        this.setMinimized(false);\n        this.$wrapper.maximize();\n    }\n\n    minimize() {\n        this.setMinimized(true);\n        this.$wrapper.minimize();\n    }\n}\n\nMinimizedMemento.$inject = [\n    'stg.debugger.wrapper',\n    '$cookies'\n];\n\nangular\n    .module('stg.debugger')\n    .service('stg.debugger.minimizedMemento', MinimizedMemento);\n","/**\n * Copyright (C) 2015 Digimedia Sp. z.o.o. d/b/a Clearcode\n *\n * This program is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, either version 3 of the License, or (at your option) any\n * later version.\n *\n * This program is distrubuted in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n'use strict';\n\nlet StateSummary;\nlet TagSummary;\n/**\n * @name Report\n */\nclass Report {\n    /**\n     * @param {Debugger} $debugger\n     * @param {StateSummary} $StateSummary\n     * @param {TagSummary} $TagSummary\n     * @param {DataLayerLimitedStack} $dataLayerLimitedStack\n     */\n    constructor($debugger, $StateSummary, $TagSummary, $dataLayerLimitedStack, $filter) {\n\n        let $this = this;\n\n        StateSummary = $StateSummary;\n        TagSummary = $TagSummary;\n        this.$filter = $filter;\n\n        this.$debugger = $debugger;\n\n        this.$dataLayerLimitedStack = $dataLayerLimitedStack;\n\n        this.stateSummary = new StateSummary();\n\n        let tagTree = $debugger.getTagTree();\n\n        // Prepare tag summary\n        let tagSummary;\n\n        for (let tag in tagTree) {\n            tagSummary = new TagSummary();\n            tagSummary.id = tagTree[tag].id;\n            tagSummary.name = tagTree[tag].name;\n            tagSummary.code = tagTree[tag].code;\n            tagSummary.firedTriggers = tagTree[tag].triggers;\n            tagSummary.disableInDebugMode = tagTree[tag].disableInDebugMode;\n            tagSummary.respectVisitorsPrivacy = tagTree[tag].respectVisitorsPrivacy;\n\n            this.stateSummary.addTagSummary(tagTree[tag].id, tagSummary);\n        }\n\n        // Run for the first time\n        this.updateSummary();\n\n        $debugger.addListenerContainerStates(() => {\n            $this.updateSummary();\n        });\n}\n\n    /**\n     * Update report summary about states\n     */\n    updateSummary() {\n\n        let states = this.$debugger.getDataLayerStates(),\n            tagSummary;\n\n        while(states.length) {\n\n            let state = states.shift();\n\n            let tags = state.tags;\n\n            let summary = new StateSummary();\n\n            summary.dataLayerElement = state.dataLayerElement;\n            summary.variableCollection = state.variableCollection;\n\n            for (let tag in tags) {\n\n                tagSummary = new TagSummary();\n                tagSummary.id = tags[tag].id;\n                tagSummary.name = tags[tag].name;\n                tagSummary.code = tags[tag].code;\n                tagSummary.firedTriggers = tags[tag].triggers;\n                tagSummary.resolved = tags[tag].resolved;\n                tagSummary.disableInDebugMode = tags[tag].disableInDebugMode;\n                tagSummary.respectVisitorsPrivacy = tags[tag].respectVisitorsPrivacy;\n\n                summary.addTagSummary(tags[tag].id, tagSummary);\n\n                if (tags[tag].resolved) {\n\n                    if (tags[tag].id !== undefined) {\n\n                        let resolvedTriggersIds = [];\n\n                        for (let trigger in tags[tag].triggers) {\n                            if (tags[tag].triggers[trigger].resolved) {\n                                resolvedTriggersIds.push(tags[tag].triggers[trigger].id);\n                            }\n                        }\n\n                        this.stateSummary.getTagSummary(tags[tag].id)\n                            .increaseFiredCount()\n                            .markResolvedTriggers(resolvedTriggersIds);\n\n                    }\n\n                }\n\n            }\n\n            this.$dataLayerLimitedStack.push(summary);\n\n        }\n\n    }\n\n    /**\n     * Returns fired tags list\n     *\n     * @returns {Array}\n     */\n    getFiredTags() {\n\n        return this.$filter('firedTags')(\n            this.stateSummary\n                .getTagSummaryCollection()\n        );\n    }\n\n    /**\n     * Returns tags which are fired but disabled\n     *\n     * @returns {Array}\n     */\n    getDisabledFiredTags() {\n\n        return this.$filter('firedDisabledTags')(\n            this.stateSummary\n                .getTagSummaryCollection()\n        );\n    }\n\n    /**\n     * Returns not fired tags list\n     *\n     * @returns {*}\n     */\n    getNotFiredTags() {\n\n        return this.$filter('notFiredTags')(\n            this.stateSummary\n                .getTagSummaryCollection()\n        );\n\n    }\n\n    /**\n     * @returns {DataLayerLimitedStack}\n     */\n    get dataLayerLimitedStack() {\n        return this.$dataLayerLimitedStack;\n    }\n}\n\nReport.$inject = [\n    'stg.debugger.debugger',\n    'stg.debugger.StateSummary',\n    'stg.debugger.TagSummary',\n    'stg.debugger.dataLayerLimitedStack',\n    '$filter'\n];\n\nangular\n    .module('stg.debugger')\n    .service('stg.debugger.report', Report);\n","/**\n * Copyright (C) 2015 Digimedia Sp. z.o.o. d/b/a Clearcode\n *\n * This program is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, either version 3 of the License, or (at your option) any\n * later version.\n *\n * This program is distrubuted in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n'use strict';\n\n(function(parent) {\n    angular\n        .module('stg.debugger')\n        .value('$container', parent.sevenTag);\n})(parent);\n","/**\n * Copyright (C) 2015 Digimedia Sp. z.o.o. d/b/a Clearcode\n *\n * This program is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, either version 3 of the License, or (at your option) any\n * later version.\n *\n * This program is distrubuted in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n'use strict';\n\n(function(parent) {\n    angular\n        .module('stg.debugger')\n        .value('$container', parent.sevenTag);\n})(parent);\n","/**\n * Copyright (C) 2015 Digimedia Sp. z.o.o. d/b/a Clearcode\n *\n * This program is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, either version 3 of the License, or (at your option) any\n * later version.\n *\n * This program is distrubuted in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n'use strict';\n\n/**\n * @name EventsLogDetailsController\n */\nclass EventsLogDetailsController {\n\n    /**\n     * @param $dataLayerLimitedStack\n     * @param $stateParams\n     */\n    constructor ($dataLayerLimitedStack, $stateParams) {\n\n        this.dataLayerLimitedStack = $dataLayerLimitedStack;\n        this.stateParams = $stateParams;\n\n    }\n\n    /**\n     * @returns {*}\n     */\n    get summary () {\n\n        return this.dataLayerLimitedStack.get(this.stateParams.eventId);\n\n    }\n\n    get eventId () {\n\n        return this.stateParams.eventId;\n\n    }\n\n    get tagSummary () {\n\n        if (angular.equals({}, this.summary.tagSummaryCollection)) {\n            return undefined;\n        }\n\n        return this.summary.tagSummaryCollection;\n\n    }\n\n\n}\n\nEventsLogDetailsController.$inject = [\n    'stg.debugger.dataLayerLimitedStack',\n    '$stateParams'\n];\n\nangular\n    .module('stg.debugger')\n    .controller('stg.debugger.EventsLogDetailsController', EventsLogDetailsController);\n","/**\n * Copyright (C) 2015 Digimedia Sp. z.o.o. d/b/a Clearcode\n *\n * This program is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, either version 3 of the License, or (at your option) any\n * later version.\n *\n * This program is distrubuted in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n'use strict';\n\n/**\n * @name OverviewTagDetailsController\n */\nclass OverviewTagDetailsController {\n\n    /**\n     * @param $report\n     * @param $stateParams\n     * @param $container\n     */\n    constructor ($report, $stateParams, $container) {\n        this.report = $report;\n        this.stateParams = $stateParams;\n        this.doNotTrackEnabled = $container.$doNotTrack.isEnabled();\n    }\n\n    /**\n     * Returns tag details based on routing parameter\n     *\n     * @returns {TagSummary|Boolean}\n     */\n    get tagSummary () {\n\n        return this.report\n            .stateSummary\n            .getTagSummary(this.stateParams.id);\n\n    }\n\n}\n\nOverviewTagDetailsController.$inject = [\n    'stg.debugger.report',\n    '$stateParams',\n    '$container'\n];\n\nangular\n    .module('stg.debugger')\n    .controller('stg.debugger.OverviewTagDetailsController', OverviewTagDetailsController);\n","/**\n * Copyright (C) 2015 Digimedia Sp. z.o.o. d/b/a Clearcode\n *\n * This program is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, either version 3 of the License, or (at your option) any\n * later version.\n *\n * This program is distrubuted in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n'use strict';\n\n/**\n * @name EventsLogController\n */\nclass EventsLogController {\n\n    /**\n     * @param $report\n     */\n    constructor ($report) {\n\n        this.report = $report;\n\n    }\n\n    /**\n     * Returns event logs for container\n     *\n     * @returns {DataLayerLimitedStack|StatesController.dataLayerLimitedStack|*}\n     */\n    get eventLog () {\n\n        return this.report.dataLayerLimitedStack.stack;\n\n    }\n\n}\n\nEventsLogController.$inject = [\n    'stg.debugger.report'\n];\n\nangular\n    .module('stg.debugger')\n    .controller('stg.debugger.EventsLogController', EventsLogController);\n","/**\n * Copyright (C) 2015 Digimedia Sp. z.o.o. d/b/a Clearcode\n *\n * This program is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, either version 3 of the License, or (at your option) any\n * later version.\n *\n * This program is distrubuted in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n'use strict';\n\n/**\n * @name OverviewTagsController\n */\nclass OverviewTagsController {\n\n    /**\n     * @param {Report} $report\n     * @param {$state} $state\n     * @param {$container} $container\n     */\n    constructor ($report, $state, $container) {\n        this.report = $report;\n        this.state = $state;\n        this.doNotTrackEnabled = $container.$doNotTrack.isEnabled();\n    }\n\n    /**\n     * Returns tags collection with information about them\n     *\n     * @returns {StateSummary.tagSummaryCollection|*}\n     */\n    get tags () {\n\n        if (angular.equals({}, this.report.stateSummary.tagSummaryCollection)) {\n            return undefined;\n        }\n\n        return this.report.stateSummary.tagSummaryCollection;\n\n    }\n}\n\nOverviewTagsController.$inject = [\n    'stg.debugger.report',\n    '$state',\n    '$container'\n];\n\nangular\n    .module('stg.debugger')\n    .controller('stg.debugger.OverviewTagsController', OverviewTagsController);\n","/**\n * Copyright (C) 2015 Digimedia Sp. z.o.o. d/b/a Clearcode\n *\n * This program is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, either version 3 of the License, or (at your option) any\n * later version.\n *\n * This program is distrubuted in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n'use strict';\n\n/**\n * @name EventsLogTagDetailsController\n */\nclass EventsLogTagDetailsController {\n\n    /**\n     * @param $stateParams\n     * @param $scope\n     */\n    constructor ($stateParams, $scope) {\n\n        this.scope = $scope;\n        this.stateParams = $stateParams;\n\n    }\n\n    /**\n     * Returns tag details based on routing parameter\n     *\n     * @returns {TagSummary|Boolean}\n     */\n    get tagSummary () {\n\n        return this.scope.view.summary.getTagSummary(this.stateParams.id);\n\n    }\n\n}\n\nEventsLogTagDetailsController.$inject = [\n    '$stateParams',\n    '$scope'\n];\n\nangular\n    .module('stg.debugger')\n    .controller('stg.debugger.EventsLogTagDetailsController', EventsLogTagDetailsController);\n"],"sourceRoot":"/home/lmacvean/workarea/seventag/src/container-debugger"}