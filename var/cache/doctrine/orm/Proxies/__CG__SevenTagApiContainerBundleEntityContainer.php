<?php

namespace Proxies\__CG__\SevenTag\Api\ContainerBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Container extends \SevenTag\Api\ContainerBundle\Entity\Container implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'name', 'description', 'tags', 'triggers', 'variables', 'websites', 'createdBy', 'lastPublishVersion', 'permissions', 'delay', 'code', 'createdAt', 'updatedAt', 'version', 'accessId');
        }

        return array('__isInitialized__', 'id', 'name', 'description', 'tags', 'triggers', 'variables', 'websites', 'createdBy', 'lastPublishVersion', 'permissions', 'delay', 'code', 'createdAt', 'updatedAt', 'version', 'accessId');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Container $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', array($description));

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array());

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function getTags()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTags', array());

        return parent::getTags();
    }

    /**
     * {@inheritDoc}
     */
    public function setTags($tags)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTags', array($tags));

        return parent::setTags($tags);
    }

    /**
     * {@inheritDoc}
     */
    public function addTag(\SevenTag\Component\Tag\Model\TagInterface $tag)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTag', array($tag));

        return parent::addTag($tag);
    }

    /**
     * {@inheritDoc}
     */
    public function hasTag(\SevenTag\Component\Tag\Model\TagInterface $tag)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasTag', array($tag));

        return parent::hasTag($tag);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTag(\SevenTag\Component\Tag\Model\TagInterface $tag)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTag', array($tag));

        return parent::removeTag($tag);
    }

    /**
     * {@inheritDoc}
     */
    public function getTriggers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTriggers', array());

        return parent::getTriggers();
    }

    /**
     * {@inheritDoc}
     */
    public function setTriggers($triggers)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTriggers', array($triggers));

        return parent::setTriggers($triggers);
    }

    /**
     * {@inheritDoc}
     */
    public function addTrigger(\SevenTag\Component\Trigger\Model\Trigger $trigger)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTrigger', array($trigger));

        return parent::addTrigger($trigger);
    }

    /**
     * {@inheritDoc}
     */
    public function hasTrigger(\SevenTag\Component\Trigger\Model\Trigger $trigger)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasTrigger', array($trigger));

        return parent::hasTrigger($trigger);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTrigger(\SevenTag\Component\Trigger\Model\Trigger $trigger)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTrigger', array($trigger));

        return parent::removeTrigger($trigger);
    }

    /**
     * {@inheritDoc}
     */
    public function getVariables()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVariables', array());

        return parent::getVariables();
    }

    /**
     * {@inheritDoc}
     */
    public function setVariables($variables)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVariables', array($variables));

        return parent::setVariables($variables);
    }

    /**
     * {@inheritDoc}
     */
    public function addVariable(\SevenTag\Component\Variable\Model\Variable $variable)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addVariable', array($variable));

        return parent::addVariable($variable);
    }

    /**
     * {@inheritDoc}
     */
    public function hasVariable(\SevenTag\Component\Variable\Model\Variable $variable)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasVariable', array($variable));

        return parent::hasVariable($variable);
    }

    /**
     * {@inheritDoc}
     */
    public function removeVariable(\SevenTag\Component\Variable\Model\Variable $variable)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeVariable', array($variable));

        return parent::removeVariable($variable);
    }

    /**
     * {@inheritDoc}
     */
    public function getWebsites()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWebsites', array());

        return parent::getWebsites();
    }

    /**
     * {@inheritDoc}
     */
    public function addWebsite(\SevenTag\Api\ContainerBundle\Entity\ContainerWebsite $containerWebsite)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addWebsite', array($containerWebsite));

        return parent::addWebsite($containerWebsite);
    }

    /**
     * {@inheritDoc}
     */
    public function hasWebsite(\SevenTag\Api\ContainerBundle\Entity\ContainerWebsite $containerWebsite)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasWebsite', array($containerWebsite));

        return parent::hasWebsite($containerWebsite);
    }

    /**
     * {@inheritDoc}
     */
    public function removeWebsite(\SevenTag\Api\ContainerBundle\Entity\ContainerWebsite $containerWebsite)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeWebsite', array($containerWebsite));

        return parent::removeWebsite($containerWebsite);
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedBy(\FOS\UserBundle\Model\UserInterface $createdBy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedBy', array($createdBy));

        return parent::setCreatedBy($createdBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedBy', array());

        return parent::getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function getObjectIdentifier()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getObjectIdentifier', array());

        return parent::getObjectIdentifier();
    }

    /**
     * {@inheritDoc}
     */
    public function getLastPublishVersion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastPublishVersion', array());

        return parent::getLastPublishVersion();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastPublishVersion(\SevenTag\Api\AppBundle\Entity\VersionInterface $lastPublishVersion = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastPublishVersion', array($lastPublishVersion));

        return parent::setLastPublishVersion($lastPublishVersion);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublishedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublishedAt', array());

        return parent::getPublishedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function hasUnpublishedChanges()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasUnpublishedChanges', array());

        return parent::hasUnpublishedChanges();
    }

    /**
     * {@inheritDoc}
     */
    public function getPermissions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPermissions', array());

        return parent::getPermissions();
    }

    /**
     * {@inheritDoc}
     */
    public function setPermissions(array $permissions)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPermissions', array($permissions));

        return parent::setPermissions($permissions);
    }

    /**
     * {@inheritDoc}
     */
    public function getDelay()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDelay', array());

        return parent::getDelay();
    }

    /**
     * {@inheritDoc}
     */
    public function setDelay($delay)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDelay', array($delay));

        return parent::setDelay($delay);
    }

    /**
     * {@inheritDoc}
     */
    public function setCode($code)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCode', array($code));

        return parent::setCode($code);
    }

    /**
     * {@inheritDoc}
     */
    public function getCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCode', array());

        return parent::getCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt(\DateTime $createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', array($createdAt));

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', array());

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt(\DateTime $updatedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', array($updatedAt));

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', array());

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function getVersion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVersion', array());

        return parent::getVersion();
    }

    /**
     * {@inheritDoc}
     */
    public function setVersion(\SevenTag\Api\AppBundle\Entity\VersionInterface $version)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVersion', array($version));

        return parent::setVersion($version);
    }

    /**
     * {@inheritDoc}
     */
    public function setAccessId($accessId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAccessId', array($accessId));

        return parent::setAccessId($accessId);
    }

    /**
     * {@inheritDoc}
     */
    public function getAccessId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAccessId', array());

        return parent::getAccessId();
    }

}
